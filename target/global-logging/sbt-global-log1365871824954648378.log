[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers" ;*/*:dumpStructureTo C:/Users/avolkov/AppData/Local/Temp/sbt-structure1.xml; session clear-all ; set ideaPort in Global := 51907, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (BellSoft Java 11.0.10)
[debug]       Load.loadUnit: plugins took 21.2387ms
[debug]       Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\avolkov\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\avolkov\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6894 ms
[debug]           Load.resolveProject(global-plugins) took 1.0331ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\avolkov\.sbt\1.0\plugins, plugins: List(<none>))) took 3.1649ms
[debug] [Loading] Done in C:\Users\avolkov\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 4.6978ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0118ms
[debug]     Load.loadUnit(file:/C:/Users/avolkov/.sbt/1.0/plugins/, ...) took 27.8682ms
[debug]   Load.apply: load took 28.9823ms
[debug]   Load.apply: resolveProjects took 0.0959ms
[debug]   Load.apply: finalTransforms took 6.6101ms
[debug]   Load.apply: config.delegates took 0.3001ms
[debug]   Load.apply: Def.make(settings)... took 41.0557ms
[debug]   Load.apply: structureIndex took 13.5466ms
[debug]   Load.apply: mkStreams took 0.0021ms
[info] loading global plugins from C:\Users\avolkov\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 339.1419ms
[debug]           Load.loadUnit: plugins took 21.4753ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\avolkov\git\scala_copy_hdfs\project
[debug]             Load.loadUnit: mkEval took 0.2332ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\avolkov\git\scala_copy_hdfs\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9833 ms
[info] loading settings for project scala_copy_hdfs-build from assembly.sbt,idea1.sbt ...
[debug]               Load.resolveProject(scala_copy_hdfs-build) took 9.7257ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala_copy_hdfs-build, base: C:\Users\avolkov\git\scala_copy_hdfs\project, plugins: List(<none>))) took 11.0398ms
[debug] [Loading] Done in C:\Users\avolkov\git\scala_copy_hdfs\project, returning: (scala_copy_hdfs-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 34.6738ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.0057ms
[debug]         Load.loadUnit(file:/C:/Users/avolkov/git/scala_copy_hdfs/project/, ...) took 57.6658ms
[debug]       Load.apply: load took 59.0612ms
[debug]       Load.apply: resolveProjects took 0.1075ms
[debug]       Load.apply: finalTransforms took 7.0947ms
[debug]       Load.apply: config.delegates took 0.2901ms
[debug]       Load.apply: Def.make(settings)... took 86.1217ms
[debug]       Load.apply: structureIndex took 13.9231ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\avolkov\git\scala_copy_hdfs\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 390.9769ms
[debug]     Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\avolkov\git\scala_copy_hdfs
[debug]       Load.loadUnit: mkEval took 0.3332ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\avolkov\git\scala_copy_hdfs, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2775 ms
[info] loading settings for project scala_copy_hdfs from build.sbt ...
[debug]         Load.resolveProject(scala_copy_hdfs) took 40.1751ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala_copy_hdfs, base: C:\Users\avolkov\git\scala_copy_hdfs, plugins: List(<none>))) took 41.8304ms
[debug] [Loading] Done in C:\Users\avolkov\git\scala_copy_hdfs, returning: (scala_copy_hdfs)
[debug]     Load.loadUnit: loadedProjectsRaw took 107.9462ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.7858ms
[debug]   Load.loadUnit(file:/C:/Users/avolkov/git/scala_copy_hdfs/, ...) took 502.3804ms
[debug] Load.apply: load took 503.4223ms
[debug] Load.apply: resolveProjects took 0.0734ms
[debug] Load.apply: finalTransforms took 10.0349ms
[debug] Load.apply: config.delegates took 0.2261ms
[debug] Load.apply: Def.make(settings)... took 45.7742ms
[debug] Load.apply: structureIndex took 14.6641ms
[debug] Load.apply: mkStreams took 0.0022ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to scala_copy_hdfs (in build file:/C:/Users/avolkov/git/scala_copy_hdfs/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to scala_copy_hdfs (in build file:/C:/Users/avolkov/git/scala_copy_hdfs/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/avolkov/AppData/Local/Temp/sbt-structure1.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\avolkov\AppData\Local\Temp\sbt-structure1.xml...
[info] Done.
[success] Total time: 2 s, completed 30 мар. 2021 г., 22:43:13
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to scala_copy_hdfs (in build file:/C:/Users/avolkov/git/scala_copy_hdfs/)
[debug] > Exec(set ideaPort in Global := 51907, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala_copy_hdfs (in build file:/C:/Users/avolkov/git/scala_copy_hdfs/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
